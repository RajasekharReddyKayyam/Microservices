package com.example.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;

import com.example.service.customerService;

@Configuration
@EnableWebSecurity
public class AppSecurityConfig {
	@Autowired
	private customerService custservice;
	protected void configure(HttpSecurity http) throws Exception {
	    http.authorizeRequests().anyRequest().permitAll();
	}

//	@Bean
//	public PasswordEncoder pwdEncoder() {
//		return new BCryptPasswordEncoder();
//	}
//	@Bean
//	public AuthenticationProvider authprovider() {
//		DaoAuthenticationProvider authprovider=new DaoAuthenticationProvider ();
//		 authprovider.setUserDetailsService(custservice);
//		 authprovider.setPasswordEncoder(pwdEncoder());
//		 return authprovider;
//	}
//	@Bean
//	public AuthenticationManager authenticationmanager(AuthenticationConfiguration config) throws Exception {
//		return config.getAuthenticationManager();
//		
//	}
//	@Bean
//    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
//        
//
//	return http.csrf().disable().authorizeHttpRequests().requestMatchers("/register","login").permitAll().and().build();
}
	
	

}
}
